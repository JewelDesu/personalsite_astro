---
import Buttons from '../../components/buttons.astro';
import Footer from '../../components/footer.astro';
import Layout from '../../layouts/Layout.astro';

import Paging from '../../components/projects/pagingProject.astro';
import ProjectList from '../../layouts/projectList.astro';

import type { GetStaticPaths, GetStaticPathsOptions } from 'astro';
import { getCollection, type CollectionEntry } from 'astro:content';

interface Props {
  page: {
    data: CollectionEntry<'articles'>[];
  };
}

const { page } = Astro.props;

export const getStaticPaths: GetStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const projectCollection = await getCollection('articles');

  const sortedProjects = projectCollection.sort(
    (a, b) => new Date(b.data.title).valueOf() - new Date(a.data.title).valueOf()
  );

  const projects = sortedProjects.map((article) => ({
    params: { id: article.id },
    props: { ...article },
  }));

  return paginate(
    projects.map((data) => data.props),
    { pageSize: 5 }
  );
};
---



<Layout>
		<main>
			<div>
				<div id="top-grid">
					<div id="top-legend">
							<legend style="font-size: 30px;">
								Projects
							</legend>
						</div>
						<Buttons />
					</div>
				
				<ProjectList articles={page.data}>
  			  <Paging {page} />
		    </ProjectList>
			</div>			
			</main>
			<footer>
				<Footer />
			</footer>
</Layout>